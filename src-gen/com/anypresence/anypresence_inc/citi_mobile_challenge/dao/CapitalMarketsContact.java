package com.anypresence.anypresence_inc.citi_mobile_challenge.dao;

import com.anypresence.anypresence_inc.citi_mobile_challenge.dao.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table CAPITALMARKETSCONTACTS.
 */
public class CapitalMarketsContact extends APObject {

	private Long id;
	private String address;
	private String city;
	private String clientName;
	private String country;
	private String email;
	private String jobRole;
	private String jobTitle;
	private String name;
	private String phone;
	private String state;
	private Integer year;
	private String scope;
	private String objectId;
	private java.util.Date _cacheUpdatedAt;
	private Long apCachedRequestId;

	/** Used to resolve relations */
	private transient DaoSession daoSession;

	/** Used for active entity operations. */
	private transient CapitalMarketsContactDao myDao;

	private APCachedRequest aPCachedRequest;
	private Long aPCachedRequest__resolvedKey;

	// KEEP FIELDS - put your custom fields here
	// KEEP FIELDS END

	public CapitalMarketsContact() {
	}

	public CapitalMarketsContact(Long id) {
		this.id = id;
	}

	public CapitalMarketsContact(Long id, String address, String city,
			String clientName, String country, String email, String jobRole,
			String jobTitle, String name, String phone, String state,
			Integer year, String scope, String objectId,
			java.util.Date _cacheUpdatedAt, Long apCachedRequestId) {
		this.id = id;
		this.address = address;
		this.city = city;
		this.clientName = clientName;
		this.country = country;
		this.email = email;
		this.jobRole = jobRole;
		this.jobTitle = jobTitle;
		this.name = name;
		this.phone = phone;
		this.state = state;
		this.year = year;
		this.scope = scope;
		this.objectId = objectId;
		this._cacheUpdatedAt = _cacheUpdatedAt;
		this.apCachedRequestId = apCachedRequestId;
	}

	/** called by internal mechanisms, do not call yourself. */
	public void __setDaoSession(DaoSession daoSession) {
		this.daoSession = daoSession;
		myDao = daoSession != null
				? daoSession.getCapitalMarketsContactDao()
				: null;
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public String getCity() {
		return city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	public String getClientName() {
		return clientName;
	}

	public void setClientName(String clientName) {
		this.clientName = clientName;
	}

	public String getCountry() {
		return country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getJobRole() {
		return jobRole;
	}

	public void setJobRole(String jobRole) {
		this.jobRole = jobRole;
	}

	public String getJobTitle() {
		return jobTitle;
	}

	public void setJobTitle(String jobTitle) {
		this.jobTitle = jobTitle;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getPhone() {
		return phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	public String getState() {
		return state;
	}

	public void setState(String state) {
		this.state = state;
	}

	public Integer getYear() {
		return year;
	}

	public void setYear(Integer year) {
		this.year = year;
	}

	public String getScope() {
		return scope;
	}

	public void setScope(String scope) {
		this.scope = scope;
	}

	public String getObjectId() {
		return objectId;
	}

	public void setObjectId(String objectId) {
		this.objectId = objectId;
	}

	public java.util.Date get_cacheUpdatedAt() {
		return _cacheUpdatedAt;
	}

	public void set_cacheUpdatedAt(java.util.Date _cacheUpdatedAt) {
		this._cacheUpdatedAt = _cacheUpdatedAt;
	}

	public Long getApCachedRequestId() {
		return apCachedRequestId;
	}

	public void setApCachedRequestId(Long apCachedRequestId) {
		this.apCachedRequestId = apCachedRequestId;
	}

	/** To-one relationship, resolved on first access. */
	public APCachedRequest getAPCachedRequest() {
		Long __key = this.apCachedRequestId;
		if (aPCachedRequest__resolvedKey == null
				|| !aPCachedRequest__resolvedKey.equals(__key)) {
			if (daoSession == null) {
				throw new DaoException("Entity is detached from DAO context");
			}
			APCachedRequestDao targetDao = daoSession.getAPCachedRequestDao();
			APCachedRequest aPCachedRequestNew = targetDao.load(__key);
			synchronized (this) {
				aPCachedRequest = aPCachedRequestNew;
				aPCachedRequest__resolvedKey = __key;
			}
		}
		return aPCachedRequest;
	}

	public void setAPCachedRequest(APCachedRequest aPCachedRequest) {
		synchronized (this) {
			this.aPCachedRequest = aPCachedRequest;
			apCachedRequestId = aPCachedRequest == null
					? null
					: aPCachedRequest.getId();
			aPCachedRequest__resolvedKey = apCachedRequestId;
		}
	}

	/** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
	public void delete() {
		if (myDao == null) {
			throw new DaoException("Entity is detached from DAO context");
		}
		myDao.delete(this);
	}

	/** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
	public void update() {
		if (myDao == null) {
			throw new DaoException("Entity is detached from DAO context");
		}
		myDao.update(this);
	}

	/** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
	public void refresh() {
		if (myDao == null) {
			throw new DaoException("Entity is detached from DAO context");
		}
		myDao.refresh(this);
	}

	// KEEP METHODS - put your custom methods here
	// KEEP METHODS END

}
