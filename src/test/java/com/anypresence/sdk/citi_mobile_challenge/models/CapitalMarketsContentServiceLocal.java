package com.anypresence.sdk.citi_mobile_challenge.models;

//
//  CapitalMarketsContentService.java
//  
//
//  Generated by AnyPresence, Inc on 2015-09-15
//  Copyright (c) 2015. All rights reserved.
//

import android.content.Context;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.*;
import java.util.Map.Entry;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.TimeUnit;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Assert;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.junit.runner.RunWith;
import com.anypresence.*;
import org.json.JSONException;

import com.anypresence.sdk.APSDKSetup;
import com.anypresence.sdk.acl.*;
import com.anypresence.sdk.cache.*;
import com.anypresence.sdk.config.Config;
import com.anypresence.sdk.query.*;
import com.anypresence.sdk.citi_mobile_challenge.*;
import com.anypresence.rails_droid.http.IRestClient;
import com.anypresence.rails_droid.http.RestClientFactory;
import com.anypresence.rails_droid.*;
import org.robolectric.Robolectric;
import com.google.common.util.concurrent.FutureCallback;

import java.net.URI;
import java.net.URISyntaxException;
import java.io.IOException;

public class CapitalMarketsContentServiceLocal {
	protected List<com.anypresence.sdk.citi_mobile_challenge.models.CapitalMarketsContentService> createdObjects;
	protected List<com.anypresence.sdk.citi_mobile_challenge.models.CapitalMarketsContentService> objects;
	protected static CountDownLatch lock = new CountDownLatch(1);

	/**
	
	 **/

	protected Context context = null;

	protected IRestClient getTestRestClient() {
		return new MockJSONRestClient() {
			@Override
			public List<String> get(URI uri) throws JSONException, IOException,
					URISyntaxException, JSONException, RemoteRequestException {
				List<String> list = new ArrayList<String>();
				list.add("[{\"id\":\"0\",\"alert_date\":\"fake\",\"all_attachments\":[\"fake0\",\"fake1\"],\"analyst_id\":\"fake\",\"analyst_type\":\"fake\",\"asset_class\":\"fake\",\"attachment_id\":0,\"author_details\":[\"fake0\",\"fake1\"],\"author_id\":\"fake\",\"author_name\":\"fake\",\"authors\":\"fake\",\"company\":\"fake\",\"content_services_type\":\"fake\",\"content_type\":\"fake\",\"content_url\":\"fake\",\"date_string\":\"fake\",\"document_url\":\"fake\",\"encrypted_id\":\"fake\",\"file_link\":\"fake\",\"file_name\":\"fake\",\"file_type\":\"fake\",\"formated_pub_date\":\"fake\",\"formatted_date_str\":\"fake\",\"headline\":\"fake\",\"hit_count\":0,\"html_escaped_title\":\"fake\",\"image\":\"fake\",\"image_group\":[\"fake0\",\"fake1\"],\"kv\":\"fake\",\"medial_url_ios\":\"fake\",\"media_url_android\":\"fake\",\"menu_code\":\"fake\",\"miliseconds\":\"fake\",\"obo_first_name\":\"fake\",\"obo_last_name\":\"fake\",\"obo_preferred_name\":\"fake\",\"page_count\":0,\"product_list\":[\"fake0\",\"fake1\"],\"product_type\":\"fake\",\"pub_date\":\"fake\",\"pub_id\":\"fake\",\"pub_key\":\"fake\",\"ref_article_title\":\"fake\",\"ref_article_url\":\"fake\",\"region\":\"fake\",\"resdata_url\":\"fake\",\"rnum\":\"fake\",\"scale\":[\"fake0\",\"fake1\"],\"sectors\":\"fake\",\"source\":\"fake\",\"summary\":\"fake\",\"synopsis\":\"fake\",\"template\":\"fake\",\"theme_id\":\"fake\",\"tickers\":\"fake\",\"title\":\"fake\",\"total_count\":0,\"video_type\":\"fake\",\"video_url\":\"fake\"},{\"id\":\"1\",\"alert_date\":\"fake\",\"all_attachments\":[\"fake0\",\"fake1\"],\"analyst_id\":\"fake\",\"analyst_type\":\"fake\",\"asset_class\":\"fake\",\"attachment_id\":0,\"author_details\":[\"fake0\",\"fake1\"],\"author_id\":\"fake\",\"author_name\":\"fake\",\"authors\":\"fake\",\"company\":\"fake\",\"content_services_type\":\"fake\",\"content_type\":\"fake\",\"content_url\":\"fake\",\"date_string\":\"fake\",\"document_url\":\"fake\",\"encrypted_id\":\"fake\",\"file_link\":\"fake\",\"file_name\":\"fake\",\"file_type\":\"fake\",\"formated_pub_date\":\"fake\",\"formatted_date_str\":\"fake\",\"headline\":\"fake\",\"hit_count\":0,\"html_escaped_title\":\"fake\",\"image\":\"fake\",\"image_group\":[\"fake0\",\"fake1\"],\"kv\":\"fake\",\"medial_url_ios\":\"fake\",\"media_url_android\":\"fake\",\"menu_code\":\"fake\",\"miliseconds\":\"fake\",\"obo_first_name\":\"fake\",\"obo_last_name\":\"fake\",\"obo_preferred_name\":\"fake\",\"page_count\":0,\"product_list\":[\"fake0\",\"fake1\"],\"product_type\":\"fake\",\"pub_date\":\"fake\",\"pub_id\":\"fake\",\"pub_key\":\"fake\",\"ref_article_title\":\"fake\",\"ref_article_url\":\"fake\",\"region\":\"fake\",\"resdata_url\":\"fake\",\"rnum\":\"fake\",\"scale\":[\"fake0\",\"fake1\"],\"sectors\":\"fake\",\"source\":\"fake\",\"summary\":\"fake\",\"synopsis\":\"fake\",\"template\":\"fake\",\"theme_id\":\"fake\",\"tickers\":\"fake\",\"title\":\"fake\",\"total_count\":0,\"video_type\":\"fake\",\"video_url\":\"fake\"}]");
				return list;
			}

			@Override
			public List<String> get(URI uri, Map<String, String> headers)
					throws JSONException, IOException, URISyntaxException,
					JSONException, RemoteRequestException {
				return null;
			}

			@Override
			public List<String> post(URI uri, String body,
					Map<String, String> headers) throws IOException,
					RemoteRequestException {
				return null;
			}

			@Override
			public List<String> post(URI uri, String body) throws IOException,
					RemoteRequestException {
				return null;
			}

			@Override
			public List<String> get(RemoteRequest remoteRequest)
					throws IOException, URISyntaxException, JSONException,
					RemoteRequestException {
				return get(remoteRequest.getPathAsURI());
			}

			@Override
			public List<String> post(RemoteRequest remoteRequest, String body)
					throws IOException, RemoteRequestException {
				return null;
			}

			@Override
			public List<String> put(RemoteRequest remoteRequest, String body)
					throws IOException, RemoteRequestException {
				return null;
			}

			@Override
			public List<String> put(URI uri, String body) throws IOException,
					RemoteRequestException {
				return null;
			}

		};
	}

	public void setup() {
		APSDKSetup.setDBStoreType(DBStoreType.IN_MEMORY);
		com.anypresence.rails_droid.RemoteRailsConfig.DEBUG = true;
		if (context == null) {
			context = Robolectric.buildActivity(MyActivity.class).attach()
					.create().get();
			APSetup.setBaseUrl("http://localhost");
			APSetup.setup();
			Config.TEST_MODE = true;
			APSetup.setupOrm(context);
		}
	}

}
